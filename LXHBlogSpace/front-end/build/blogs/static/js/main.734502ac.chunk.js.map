{"version":3,"sources":["components/Navbar.js","App.js","components/FunctionButtons.js","serviceWorker.js","index.js"],"names":["NavBar","props","IndexZone","Tabs","value","state","currentTab","onChange","event","newTab","window","location","bind","indicatorColor","Tab","className","label","srcStatusZone","loginDialogOpenState","noticeOpenState","noticeMsg","AppBar","position","style","minWidth","background","Typography","variant","this","Button","onClick","ShowDialog","href","Dialog","open","onClose","HideDialog","DialogTitle","DialogContent","TextField","id","type","name","autoComplete","margin","marginTop","DoLoginAction","Snackbar","setNoticeClose","message","autoHideDuration","setState","console","log","request","XMLHttpRequest","onreadystatechange","status","readyState","setTimeout","reload","response","JSON","parse","responseText","reason","API_PROVIDER_SERVER","send","fetch","then","json","error","LoginRegion","userinfo","vaild","ReactDOM","render","Link","underline","Avatar","src","avatar","document","getElementsByClassName","React","Component","ScrollToHashTag","target","decodeURI","hash","substr","supportTags","index","length","tagList","getElementsByTagName","i","innerText","scrollTo","offsetTop","replace","ScrollToHashTagClickListener","srcElement","localName","App","useState","content","hookFunc","article","converted","Remarkable","highlight","str","lang","hljs","getLanguage","g1","match","UpdateContainer","onhashchange","body","onclick","Container","fixed","dangerouslySetInnerHTML","__html","height","marginLeft","marginRight","width","FunctionButtons","voteNum","commentNum","dialogDisplayState","noticeDiaplayState","srcCommentBlock","currentCommentPage","maxCommentPage","RetriveComment","maxWidth","borderTop","borderBottom","display","Input","placeholder","multiline","flexGrow","onClickSendComment","HideNotice","commentList","map","comment","re","username","time","direction","res","commentInfo","maxPageNum","pageList","push","GenCommentBlock","textAlign","pageIndex","disabled","func","SwitchCommentPage","Boolean","hostname","SitckyFuntionButtons","container","panelLeft","offsetLeft","offsetWidth","panel","getElementById","top","left","onload","onresize","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.734502ac.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Link from '@material-ui/core/Link'\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogAction from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\n\nimport TextField from \"@material-ui/core/TextField\"\n\nimport Snackbar from '@material-ui/core/Snackbar'\n\n\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\n\nimport \"./css/Navbar.css\"\n\nvar API_PROVIDER_SERVER = \"http://api.leaflxh.com\";\n\n\n//以下为重构的代码\nclass NavBar extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            srcStatusZone: <></>,\n            currentTab: \"article\",\n            loginDialogOpenState: false,\n            noticeOpenState: false,\n            noticeMsg: \"\"\n        }\n    }\n\n    render()\n    {\n        return(\n            <AppBar position=\"fixed\" style={{minWidth: 960, background: \"#f5f5f5\"}}>\n                <ToolBar >\n                    <Typography className =\"navstyle-title\" variant=\"h5\">\n                        LXH's Blog Space\n                    </Typography>\n                    <div className=\"navstyle-index\">\n                        {this.IndexZone()}\n                    </div>\n                    <div className=\"navstyle-status\">\n                        <>\n                            <Button className= \"navstyle-button\" onClick={this.ShowDialog.bind(this)}>\n                                登录\n                                <AccountBoxIcon className=\"navstyle-icon\" />\n                            </Button>\n                            <Button className=\"navstyle-button\" href=\"/join\">\n                                注册\n                                <AssignmentIcon className=\"navstyle-icon\" />\n                            </Button>\n                            <Dialog open={this.state.loginDialogOpenState} onClose={this.HideDialog.bind(this)}>\n                                <DialogTitle>登录</DialogTitle>\n                                <DialogContent >\n                                    <div>\n                                        <TextField\n                                            id=\"login-username\"\n                                            label=\"用户名或邮箱\"\n                                            type=\"email\"\n                                            name=\"email\"\n                                            autoComplete=\"email\"\n                                            margin=\"normal\"\n                                            style={{margin: \"0 auto 0 auto\", minWidth: \"300px\"}}\n                                        />\n                                    </div>\n                                    <div>\n                                        <TextField\n                                            id=\"login-password\"\n                                            label=\"密码\"\n                                            type=\"password\"\n                                            name=\"password\"\n                                            autoComplete=\"password\"\n                                            margin=\"normal\"\n                                            style={{marginTop: \"15px\", minWidth: \"300px\"}}\n                                        />\n                                    </div>\n                                </DialogContent>\n                                <DialogAction>\n                                    <Button onClick={props=>this.DoLoginAction(props)}>登录</Button>\n                                    <Button onClick={this.HideDialog.bind(this)}>关闭</Button>\n                                </DialogAction>\n                                <Snackbar  open={this.state.noticeOpenState} onClose={this.setNoticeClose.bind(this)} message={this.state.noticeMsg} autoHideDuration={3000} />\n                            </Dialog>\n                        </>\n                    </div>\n                </ToolBar>\n            </AppBar>\n        )\n    }\n\n    ShowDialog()\n    {\n        this.setState({\n            loginDialogOpenState: true\n        })\n        console.log(this.state);\n    }\n    \n    HideDialog()\n    {\n        this.setState({\n            loginDialogOpenState: false\n        })\n        \n    }\n\n    IndexZone = () => {\n        function handleChange(event, newTab) {\n            if (newTab === \"main\")\n            {\n                window.location = \"/\";\n            }\n        };\n    \n        return(\n            <Tabs value = {this.state.currentTab} onChange={handleChange.bind(this)} indicatorColor=\"primary\" >\n                <Tab className=\"indexstyle-tabmod\" label=\"首页\"  value=\"main\"/>\n                <Tab className=\"indexstyle-tabmod\" label=\"文章\"  value=\"article\" />\n                \n            </Tabs>\n        );\n    }\n\n    DoLoginAction(props)\n    {\n        console.log(props);\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function() {\n            if (request.status === 302 && request.readyState === 4)\n            {\n                this.setState({\n                    noticeOpenState: true,\n                    noticeMsg: \"登录成功\"\n                })\n\n                setTimeout(window.location.reload, 1000);\n            }\n            else if (request.status === 200 && request.readyState === 4)\n            {\n                var response = JSON.parse(request.responseText);\n                this.setState({\n                    noticeOpenState: true,\n                    noticeMsg: \"登录失败：\" + response.reason\n                })\n            }\n        }\n        request.open(\"POST\", API_PROVIDER_SERVER + \"/api/v1/passport/login\", true)\n        request.send(null);\n    }\n\n    setNoticeClose()\n    {\n        this.setState({\n            noticeOpenState: false\n        })\n    }\n\n\n    componentDidMount()\n    {\n        //初始化右边的状态栏，流程为：检查是否登录，如果是则显示用户信息，否则显示登录按钮\n        fetch(\"/api/v1/GetUserInfo\")\n            .then(response=>response.json(), (error) => {\n                this.setState({\n                    srcStatusZone: this.LoginRegion()\n                });\n            })\n            .then((userinfo)=>{\n                if (userinfo.vaild)\n                {\n                    ReactDOM.render(\n                    <>\n                        <div className=\"navstyle-userZone\">\n                            <div className=\"navstyle-userId\">\n                                <Link href={\"/user/\" + userinfo.name} underline=\"none\" >{userinfo.name}</Link>\n                            </div>\n                            <Avatar src={userinfo.avatar}/>\n                        </div>\n                    </>\n                    , document.getElementsByClassName(\"navstyle-status\")[0]);\n                        \n                }\n            });\n    }\n};\n\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport Container from \"@material-ui/core/Container\"\nimport { Remarkable } from \"remarkable\"\nimport hljs from \"highlight.js\"\nimport \"highlight.js/styles/rainbow.css\"\n\nimport Navbar from \"./components/Navbar\"\n\nfunction ScrollToHashTag()\n{\n    var target = decodeURI(window.location.hash).substr(1);\n    var supportTags = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\"];\n\n    for (var index = 0; index < supportTags.length; index++) {\n        var tagList = document.getElementsByTagName(supportTags[index]);\n        for (var i = 0; i < tagList.length; i++) {\n            if (tagList[i].innerText === target) {\n                window.scrollTo(0, tagList[i].offsetTop - 64);\n                return;\n            }\n            else if (tagList[i].innerText === (target.replace(/[-]+?/g, () => { return \" \" }))) {\n                window.scrollTo(0, tagList[i].offsetTop - 64);\n                return;\n            }\n        }\n    }\n}\n\n//绑定为document.body.onclick事件，用于点击同一个a标签的跳转处理\nfunction ScrollToHashTagClickListener(event)\n{\n    if (event.srcElement.localName === \"a\") {\n        if ((window.location.hash === event.srcElement.hash) && window.location.hash.length > 1) {\n            ScrollToHashTag();\n        }\n    }\n}\n\nfunction UpdateContainer(hookFunc)\n{\n    var request = new XMLHttpRequest();\n    request.onreadystatechange = () => {\n        if (request.readyState === 4 && request.status === 200) {\n            var article = request.responseText;\n            var md = new Remarkable({\n                highlight: function (str, lang) {\n                    if (lang && hljs.getLanguage(lang)) {\n                        var converted = hljs.highlight(lang, str).value;\n\n                        return converted;\n                    }\n                    else {\n                        // prevent xss and incorrect rendering\n                        return str.replace(/[<]{1}?/g, '&lt;').replace(/[>]{1}?/g, '&gt;');\n                    }\n                }\n            });\n\n            var converted = md.render(article);\n            /* for ```code``` (without language type) */\n            converted = converted.replace(/<pre>(.*?)<\\/pre>/mgs, (str, g1) => {\n                if (g1.match(/.*?<code.*?/) !== null) {\n                    return \"<pre class='hljs'>\" + g1 + \"</pre>\";\n                }\n                else {\n                    return str;\n                }\n            });\n\n            /* for `code` */\n            converted = converted.replace(/<p>(.*?)<\\/p>/mg, (str, g1) => {\n                return \"<p>\" + g1.replace(/<code>/mg, \"<code class='hljs unmarked-code'>\");\n            });\n\n            hookFunc(converted);\n            ScrollToHashTag();\n        }\n    }\n\n    request.open(\"GET\", \"/api/v1/GetBlogContent?blog=parse_three.md\", true);\n    request.send(null);\n}\n\n\nfunction App()\n{\n    const [content, setContent] = React.useState(\"null\");\n\n    UpdateContainer(setContent);\n    window.onhashchange = ScrollToHashTag;\n    document.body.onclick = ScrollToHashTagClickListener;\n\n    return (\n        <>\n            <Navbar />\n            <Container fixed className=\"blog-container\" dangerouslySetInnerHTML={{ __html: content }} style={{ minWidth: \"800px\", height: \"auto\", marginLeft: \"auto\", marginRight: \"auto\", background: \"#f5f5f5\", marginTop: \"80px\", width: \"70%\" }} />\n        </>\n        );\n}\n\nexport default App;\n","import React from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport PlusOne from \"@material-ui/icons/PlusOne\"\nimport AddBox from \"@material-ui/icons/AddBox\"\nimport Message from \"@material-ui/icons/Message\"\n\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogAction from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\n\nimport Input from \"@material-ui/core/Input\"\n\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport Container from \"@material-ui/core/Container\"\n\nimport \"./css/FunctionButtons.css\"\nimport { Avatar } from '@material-ui/core'\n\n\n\nclass FunctionButtons extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            voteNum: 0,\n            commentNum: 0,\n            dialogDisplayState: false,\n            noticeDiaplayState: false,\n            noticeMsg: \"null\",\n            srcCommentBlock: <></>\n        }\n        this.currentCommentPage = 1;\n        this.maxCommentPage = 1;\n    }\n\n\n    ShowDialog()\n    {\n        this.setState({\n            srcCommentBlock: <div>评论加载中</div>,\n            dialogDisplayState: true\n        })\n        this.currentCommentPage = 1;\n        this.maxCommentPage = 1;\n        this.RetriveComment();\n    }\n\n    HideDialog()\n    {\n        this.setState({\n            dialogDisplayState: false\n        })\n    }\n\n    onClickSendComment()\n    {\n        this.setState({\n            noticeDiaplayState: true,\n            noticeMsg: \"发表成功\"\n        })\n    }\n\n    HideNotice()\n    {\n        this.setState({\n            noticeDiaplayState: false\n        })\n    }\n\n    render()\n    {\n        return (\n        <>\n            <Button className=\"func-button\">\n                <PlusOne />\n                <div className=\"button-label\">\n                    {this.state.voteNum}&nbsp;赞同\n                </div>\n            </Button>\n            <Button className=\"func-button\" onClick={this.ShowDialog.bind(this)}>\n                <Message />\n                <div className=\"button-label\">\n                    {this.state.commentNum}&nbsp;评论\n                </div>\n            </Button>\n            <Button className=\"func-button\">\n                <AddBox />\n                <div className=\"button-label\">\n                添加收藏\n                </div>\n            </Button>\n            <Dialog open={this.state.dialogDisplayState} onClose={this.HideDialog.bind(this)} maxWidth=\"false\">\n                <DialogTitle>本文章的评论区</DialogTitle>\n                <DialogContent style={{borderTop: \"1px solid gray\", borderBottom: \"1px solid gray\", marginLeft: \"5px\", marginRight: \"5px\"}}>\n                    <div >\n                        <Container fixed className=\"comment-container\">\n                            {this.state.srcCommentBlock}\n                        </Container>\n                    </div>\n\n                </DialogContent>\n                <DialogAction style={{display:\"flex\", marginLeft: \"20px\", marginRight: \"20px\"}}>\n                    <Input placeholder=\"友善是交流的起点\"  multiline={false} style={{flexGrow: 1}}/>\n                    <Button onClick={this.onClickSendComment.bind(this)}>发表</Button>\n                    \n                </DialogAction>\n                <Snackbar  open={this.state.noticeDiaplayState} onClose={this.HideNotice.bind(this)} message={this.state.noticeMsg} autoHideDuration={3000} />\n            </Dialog>\n\n        </>\n        )\n    }\n\n    GenCommentBlock(commentList)\n    {\n        return commentList.map((comment, index)=>{\n            if (comment.re !== \"\")\n            {\n                return (\n                    <div className=\"comment-block\">\n                        <div className=\"comment-user-info\"> \n                            <Avatar src={comment.avatar} />\n                            <div className=\"comment-post-user\">\n                                {comment.username}  \n                            </div>\n                            <div className=\"comment-reply-user\">\n                                Re: {comment.re}\n                            </div>\n                        </div>\n                        <div className=\"comment-content\">\n                            {comment.comment}\n                        </div>\n                        <div className=\"comment-footer\">\n                            <div className=\"comment-footer-time\">{comment.time}</div>\n                            <div className=\"comment-footer-reply\">回复</div>\n                        </div>\n                    </div>\n                )\n            }\n            else\n            {\n                return (\n                    <div className=\"comment-block\">\n                        <div className=\"comment-user-info\"> \n                            <Avatar src={comment.avatar} />\n                            <div className=\"comment-post-user\">\n                                {comment.username}  \n                            </div>\n                        </div>\n                        <div className=\"comment-content\">\n                            {comment.comment}\n                        </div>\n                        <div className=\"comment-footer\">\n                            <div className=\"comment-footer-time\">{comment.time}</div>\n                            <div className=\"comment-footer-reply\">回复</div>\n                        </div>\n                    </div>\n                )\n            }\n        });\n    }\n\n    SwitchCommentPage(direction)\n    {\n        if(direction === \"left\")\n        {\n            this.currentCommentPage = this.currentCommentPage - 1\n        }\n        else if(direction === \"right\")\n        {\n            \n            this.currentCommentPage = this.currentCommentPage + 1\n        }\n        else\n        {\n            this.currentCommentPage = direction;\n        }\n        this.RetriveComment();\n    }\n\n    RetriveComment()\n    {\n        fetch(\"/api/v1/GetComments?page=\" + this.currentCommentPage).then(res=> res.json()).then((commentInfo)=>{\n            this.maxCommentPage = commentInfo.maxPageNum\n\n            if(commentInfo.commentList === [])\n            {\n                this.setState({\n                    srcCommentBlock: <div>暂时还没有评论</div>\n                })\n                return;\n            }\n\n            var pageList = [];\n            console.log(commentInfo.maxPageNum);\n            console.log(this.currentCommentPage);\n            console.log(\"=================================\")\n            if (this.maxCommentPage > 4)\n            {\n                if (commentInfo.maxPageNum - this.currentCommentPage > 2)\n                {\n                    console.log(commentInfo.maxPageNum);\n                    console.log(this.currentCommentPage);\n                    for (var index = 0; index <3; index++)\n                    {\n                        pageList[index] =  this.currentCommentPage + index//[1,2,3,'...', commentInfo.maxPageNum];\n                    }\n                    pageList.push(\"---\");\n                    pageList.push(commentInfo.maxPageNum);\n                }\n                else\n                {\n                    pageList[0] = 1;\n                    pageList[1] = \"---\";\n                    for (index = 1; index <= 3; index++)\n                    {\n                        pageList.push(commentInfo.maxPageNum - (3-index));\n                    }\n                }\n            }\n            else\n            {\n                for (var i = 0; i < commentInfo.maxPageNum; ++i)\n                {\n                    pageList[i] = i+1;\n                }\n            }\n\n            if (this.currentCommentPage !== 1)\n            {\n                pageList.push(\"上一页\");\n            }\n            if (this.currentCommentPage !== this.maxCommentPage )\n            {\n                pageList.push(\"下一页\");\n            }\n\n            this.setState({\n                srcCommentBlock: \n                    <>\n                        {this.GenCommentBlock(commentInfo.commentList)}\n                        <div style={{width: \"100%\", textAlign: \"center\"}}>\n                            {pageList.map((pageIndex)=>{\n                                if(pageIndex === '---')\n                                {\n                                    return <Button disabled={true}>{pageIndex}</Button>\n                                }\n                                if(pageIndex === \"下一页\")\n                                {\n                                    return <Button onClick={func=>this.SwitchCommentPage(\"right\")}>{pageIndex}</Button>\n                                }\n                                if(pageIndex === \"上一页\")\n                                {\n                                    return <Button onClick={func=>this.SwitchCommentPage(\"left\")}>{pageIndex}</Button>\n                                }\n\n                                if(this.currentCommentPage === pageIndex)\n                                {\n                                    return <Button className=\"page-button-selected\" onClick={func=>this.SwitchCommentPage(pageIndex)}>{pageIndex}</Button>\n                                }\n                                else\n                                {\n                                    return <Button className=\"page-button\" onClick={func=>this.SwitchCommentPage(pageIndex)}>{pageIndex}</Button>\n                                }\n                                \n                            })}\n                        </div>\n                    </>\n            })\n        })        \n    }\n}\n\nexport default FunctionButtons;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport FunctionButtons from \"./components/FunctionButtons\"\n\nimport * as serviceWorker from './serviceWorker';\n\nfunction SitckyFuntionButtons()\n{\n    var container = document.getElementsByClassName(\"blog-container\")[0];\n    var panelLeft = container.offsetLeft + container.offsetWidth + 20;\n    var panel = document.getElementById(\"function-buttons\");\n    panel.style.position = \"fixed\"\n    panel.style.top = \"80px\";\n    panel.style.left= panelLeft + \"px\";\n}\n\nReactDOM.render(<App />, document.getElementById('app-main'));\nReactDOM.render(<FunctionButtons />, document.getElementById('function-buttons'));\n\nwindow.onload = SitckyFuntionButtons;\nwindow.onresize = SitckyFuntionButtons;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}