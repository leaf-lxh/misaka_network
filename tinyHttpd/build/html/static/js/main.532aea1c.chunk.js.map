{"version":3,"sources":["components/BlogBriefBox.js","components/BlogBrief.js","components/UserPanel.js","components/HotTopic.js","components/MainIndexRightPanel.js","components/TimeLine.js","components/Water.js","components/MainContainer.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["BlogBriefBox","title","article","tags","interInfo","userInfo","href","time","react_default","a","createElement","className","AccessTime_default","GetTimeBlock","Avatar","src","style","borderRadius","onClick","window","open","map","tag","index","Chip","label","testBlogBriefData1","bunchData","GetBlogBrief","blogText","blogData","JSON","parse","BlogBrief","Fragment","UserPanel","userMsgInfo","undefined","ecode","username","avatar","system_msg","user_msg","account_state","request","XMLHttpRequest","onreadystatechange","readyState","status","info","responseText","ReactDOM","render","document","getElementsByClassName","send","RenderUserInfo","Button","display","NoteAdd_default","ViewList_default","History_default","HotTopic","param","topic","RenderHotTopic","List","ListSubheader","component","disableSticky","elements","ListItem","button","width","height","MainIndexRightPanel","components_UserPanel","components_HotTopic","TimeLine","Water","StickyRightPanel","briefList","panelLeft","offsetLeft","offsetWidth","panel","position","top","left","MainContainer","requiredPage","onload","onresize","Container","fixed","components_BlogBrief","components_TimeLine","components_Water","paddingTop","CircularProgress","variant","GenPage","components_MainIndexRightPanel","indexStyle","makeStyles","indicatorColor","background","statusStyle","padding","marginLeft","&:hover","icon","paddingLeft","userZone","minWidth","maxWidth","userId","flexGrow","color","textAlign","margin","paddingRight","whiteSpace","overflow","textOverflow","noticeOpenState","NoticeOpenStateModifier","noticeMsg","noticeMsgModifier","noticeTypeModifier","setOpen","setClose","DoLoginAction","console","log","RenderStatusZone","hookEvent","vaild","name","Link","underline","HideDialog","AccountBox_default","Assignment_default","Dialog","onClose","DialogTitle","DialogContent","TextField","id","type","autoComplete","marginTop","DialogActions","Snackbar","message","autoHideDuration","LoginRegion","IndexZone","_React$useState3","React","useState","_React$useState4","Object","slicedToArray","value","setValue","Tabs","onChange","event","newValue","getElementById","classes","indicator","Tab","NavBar","AppBar","Toolbar","Typography","NavBar_IndexZone","_React$useState","_React$useState2","fuck","shit","_useState","data","_unused","StatusZone","App","components_NavBar","Boolean","location","hostname","match","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.532aea1c.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport \"./css/BlogBriefBox.css\"\n\nimport AccessTime from \"@material-ui/icons/AccessTime\"\n\nfunction GetTimeBlock(time)\n{\n    if (time != null)\n    {\n        return (\n            <div className=\"blog-brief-timestamp\">\n                <div className=\"blog-brief-timestamp-iconitem\"><AccessTime /></div>\n                <div className=\"blog-brief-timestamp-timeitem\">{time}</div>\n            </div>\n        )\n    }\n    else{\n        return \"\";\n    }\n}\nfunction BlogBriefBox(title, article, tags, interInfo, userInfo, href, time)  {\n    return(\n        <div className=\"blog-brief-root\">\n            {GetTimeBlock(time)}\n            <div className=\"blog-brief-head\">\n                <div className=\"title\">{title}</div>\n                <div className=\"user-info\">\n                    <div className=\"username\">{userInfo[\"name\"]}</div>\n                    <Avatar className=\"avatar\" src={userInfo[\"avatar\"]} style={{borderRadius: 0}}/>\n                </div>\n            </div>\n\n            <div className=\"blog-brief-content-block\">\n                <span className=\"brief-content\">{article}</span>\n                <button className=\"brief-moto\" onClick={()=>{window.open(href)}}>阅读全文</button>\n            </div>\n\n            <div className=\"blog-brief-footer\">\n                <div className=\"blog-brief-tag-list\">\n                    {\n                        tags.map((tag, index) =>{\n                            return <Chip className=\"tag-item\" label={tag} style={{borderRadius:3}}/>\n                        })\n                    }\n                </div>\n                <div className=\"blog-inter-info\">\n                    <Chip className=\"info-vote\" style={{borderRadius: 0}} label={\"赞同 \" + interInfo[\"vote\"]} />\n                    <Chip className=\"info-comments\" style={{borderRadius: 0}} label={interInfo[\"comments\"] + \" 条评论\" } />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BlogBriefBox;","import React from 'react';\n// eslint-disable-next-line\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport BlogBriefBox from './BlogBriefBox'\n\nvar testBlogBriefData1 = '{\"title\": \"测试标题\", \"article\": \"测试内容…                                                                   \", \"tags\": [\"programer\", \"华为\", \"996\"], \"interInfo\": {\"vote\": \"100\", \"comments\": \"999\"}, \"userInfo\":{\"name\":\"LegendLXH\", \"avatar\":\"lxhcat.jpg\"}, \"href\": \"/blogs/114514\"}';\n\nvar blog = '{\"title\": \"系统运维从修补到宕机\", \"article\": \"目录：Linux服务 openssh-server\", \"tags\": [\"系统运维\", \"Linux系统加固\"], \"interInfo\": {\"vote\": \"100\", \"comments\": \"999\"}, \"userInfo\":{\"name\":\"LegendLXH\", \"avatar\":\"lxhcat.jpg\"}, \"href\": \"/blogs\"}';\nvar bunchData = [blog, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1,testBlogBriefData1,testBlogBriefData1];\nfunction GetBlogBrief(){\n    //由array.map函数来进行动态的批量JSX元素生成\n    //数据由此处的AJAX请求来获得\n    //var request = new XMLHttpRequest();\n\n    return bunchData.map((blogText, index) =>{\n        var blogData = JSON.parse(blogText);\n        return BlogBriefBox(blogData[\"title\"], blogData[\"article\"], blogData[\"tags\"], blogData[\"interInfo\"], blogData[\"userInfo\"], blogData[\"href\"]);\n    })\n}\n\n\nfunction BlogBrief (){\n    return(\n        <>\n            <GetBlogBrief />\n        </>\n    )\n}\n\nexport default BlogBrief;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from \"@material-ui/core/Button\"\nimport Chip from \"@material-ui/core/Chip\"\nimport \"./css/UserPanel.css\"\n\nimport NoteAdd from \"@material-ui/icons/NoteAdd\"\nimport ViewList from \"@material-ui/icons/ViewList\"\nimport History from \"@material-ui/icons/History\"\n\n\n\n\nfunction RenderUserInfo(className){\n    var request = new XMLHttpRequest();\n    request.onreadystatechange = function(){\n        if (request.readyState === 4 && request.status === 200)\n        {\n            var info = JSON.parse(request.responseText);\n            ReactDOM.render(\n                UserPanel(info),\n                document.getElementsByClassName(className)[0]\n            );\n        }\n        if (request.readyState === 4 && request.status !== 200)\n        {\n            info = {\"ecode\": -1, \"username\": \"\", \"avatar\": \"\", \"system_msg\": \"--\", \"user_msg\": \"--\", \"account_state\": \"noLogin\"};\n            ReactDOM.render(\n                UserPanel(info),\n                document.getElementsByClassName(className)[0]\n            );\n        }\n    }\n\n    request.open(\"GET\", \"/api/v1/GetUserMsgInfo\", true);\n    request.send(null);\n}\n\n\nfunction UserPanel(userMsgInfo, className){\n    if (userMsgInfo.ecode === undefined)\n    {\n        userMsgInfo = {\"ecode\": -1, \"username\": \"\", \"avatar\": \"\", \"system_msg\": \"--\", \"user_msg\": \"--\", \"account_state\": \"noLogin\"};\n        RenderUserInfo(\"user-panel\");\n    }\n    if (className === undefined)\n    {\n        className = \"user-panel\";\n    }\n    \n    return(\n        <>\n            <div className=\"control-panel\">\n                <div className=\"control-elements\">\n                    <Button style={{display:\"inline-block\"}}>\n                        <div className=\"control-elements-icon\">\n                            <NoteAdd />\n                        </div>\n                        <div className=\"control-elements-text\">\n                            创建文章\n                        </div>\n                    </Button>\n                </div>\n                <div className=\"control-elements\">\n                    <Button style={{display:\"inline-block\"}}>\n                        <div className=\"control-elements-icon\">\n                            <ViewList />\n                        </div>\n                        <div className=\"control-elements-text\">\n                            我的收藏\n                        </div>\n                    </Button>\n                </div>\n                <div className=\"control-elements\">\n                    <Button style={{display:\"inline-block\"}}>\n                        <div className=\"control-elements-icon\">\n                            <History />\n                        </div>\n                        <div className=\"control-elements-text\">\n                            浏览历史\n                        </div>\n                    </Button>\n                </div>\n            </div>\n            <div className=\"msg-panel\">\n                    <Chip className=\"msg-panel-elements\" label={\"系统消息: \" + userMsgInfo[\"system_msg\"]}/>\n                    <Chip className=\"msg-panel-elements\" label={\"用户消息: \" + userMsgInfo[\"user_msg\"]}/>\n            </div>\n        </>\n    )\n}\n\nexport default UserPanel;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./css/HotTopic.css\"\n\nimport List from \"@material-ui/core/List\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport Chip from \"@material-ui/core/Chip\"\n\n// eslint-disable-next-line\nimport Icon from \"@material-ui/core/Icon\"\n\n// eslint-disable-next-line\nfunction RenderHotTopic(className){\n    var request = new XMLHttpRequest();\n    request.onreadystatechange = function(){\n        if (request.readyState === 4 && request.status === 200)\n        {\n            var topic = JSON.parse(request.responseText);\n            ReactDOM.render(\n                HotTopic(topic),\n                document.getElementsByClassName(className)[0]\n            );\n        }\n    }\n\n    request.open(\"GET\", \"/api/v1/GetHotTopic\");\n    request.send(null);\n}\n\n\nfunction HotTopic(param){\n    if (param.ecode !== 0)\n    {\n        param = JSON.parse('{\"ecode\": -1, \"topics\": [\"热点加载中\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}');\n        RenderHotTopic(\"recommand-panel\");\n    }\n\n    return (\n        <>\n            <List>\n                <ListSubheader component=\"div\" disableSticky=\"false\">热点博文</ListSubheader>\n                {\n                    param[\"topics\"].map((elements, index) =>{\n                        return (\n                            <ListItem button className=\"topic-list-elements\">\n                                <Chip style={{borderRadius: 0, width: 25, height: 25}} label={index + 1} />\n                                <div className=\"topic-label\">\n                                    {elements}\n                                </div>\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n            \n        </>\n    );\n}\n\nexport default HotTopic;","import React from 'react';\n\nimport UserPanel from './UserPanel';\nimport HotTopic from './HotTopic';\n\nfunction MainIndexRightPanel (){\n    return(\n        <>\n            <div className=\"user-panel\">\n                <UserPanel  />\n            </div>\n            \n            <div className=\"recommand-panel\">\n                <HotTopic />\n            </div>\n            \n        </>\n    )\n}\n\nexport default MainIndexRightPanel;","import BlogBriefBox from \"./BlogBriefBox\"\n\nvar testBlogBriefData1 = '{\"title\": \"测试标题\", \"article\": \"测试内容…\", \"tags\": [\"programer\", \"华为\", \"996\"], \"interInfo\": {\"vote\": \"100\", \"comments\": \"999\"}, \"userInfo\":{\"name\":\"LegendLXH\", \"avatar\":\"lxhcat.jpg\"}, \"href\": \"/blogs/114514\", \"timestamp\": \"十分钟前\"}';\n\nfunction GetTimeLine()\n{\n    //由array.map函数来进行动态的批量JSX元素生成\n    //数据由此处的AJAX请求来获得\n    var bunchData = [testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1, testBlogBriefData1,testBlogBriefData1];\n    return bunchData.map((blogText, index) =>{\n        var blogData = JSON.parse(blogText);\n        return BlogBriefBox(blogData[\"title\"], blogData[\"article\"], blogData[\"tags\"], blogData[\"interInfo\"], blogData[\"userInfo\"], blogData[\"href\"], blogData[\"timestamp\"]);\n    })\n}\n\nfunction TimeLine()\n{\n    return GetTimeLine();\n}\n\nexport default TimeLine;","import React from \"react\"\nfunction Water()\n{\n    return (\n        <div>\n            暂未开放，敬请期待\n        </div>\n    )\n}\n\nexport default Water;","import React from 'react';\n// eslint-disable-next-line\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Container from '@material-ui/core/Container'\n\nimport BlogBrief from './BlogBrief'\nimport MainIndexRightPanel from './MainIndexRightPanel'\nimport TimeLine from \"./TimeLine\"\nimport Water from \"./Water\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\nimport './css/MainContainer.css'\n\n\nfunction GenPage(requiredPage) {\n    if (requiredPage === \"main\")\n    {\n        return (\n            <div className=\"blog-brief-list\">\n                <BlogBrief />\n            </div>\n        );\n    }\n    else if (requiredPage === \"timeline\")\n    {\n        return (\n            <div className=\"blog-brief-list\">\n                <TimeLine />\n            </div>\n        );\n    }\n    else if (requiredPage === \"water\")\n    {\n        return (\n            <div className=\"blog-brief-list\">\n                <Water/>\n            </div>\n        );\n    }\n    else\n    {\n        return (\n            <div className=\"blog-brief-list\">\n                <div className=\"container-loading\">\n                    <div style={{paddingTop: \"300px\"}}>\n                        <CircularProgress style={{display: \"inline-block\"}} variant=\"indeterminate\"/>\n                        <div className=\"container-loading-text\">\n                            加载中...\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction StickyRightPanel(){\n    var briefList = document.getElementsByClassName(\"blog-brief-list\")[0];\n    var panelLeft = briefList.offsetLeft + briefList.offsetWidth + 20;\n    var panel = document.getElementsByClassName(\"index-right-panel\")[0];\n    panel.style.position = \"fixed\"\n    panel.style.top = \"80px\";\n    panel.style.left= panelLeft + \"px\";\n}\n\nconst MainContainer = (requiredPage) => {\n    //设置右边面板悬浮\n    window.onload = StickyRightPanel;\n    window.onresize = StickyRightPanel;\n\n    return(\n        <Container fixed className=\"main-container\">\n            {GenPage(requiredPage)}\n            <div  className=\"index-right-panel\">\n                <MainIndexRightPanel/>\n            </div>\n            \n        </Container>\n    )\n}\n\nexport default MainContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport ToolBar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Link from '@material-ui/core/Link'\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogAction from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\n\nimport TextField from \"@material-ui/core/TextField\"\n\nimport Snackbar from '@material-ui/core/Snackbar'\n\n\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\n\nimport MainContainer from './MainContainer'\nimport \"./css/NavBar.css\"\n\n\nconst indexStyle = makeStyles({\n    indicatorColor : {\n        background : \"black\"\n    }\n\n});\n\nconst statusStyle = makeStyles({\n    button : {\n        padding : \"5px 50px 5px 50px \",\n        background : \"#e0e0e0\",\n        marginLeft : \"8px\",\n        \"&:hover\" : {\n            background : \"#d2d0d0\"\n        },\n    },\n    icon : {\n        paddingLeft : \"5px\",\n    },\n    userZone : {\n        display : \"flex\",\n        minWidth : 220,\n        maxWidth : 220\n    },\n    userId : {\n        flexGrow : 1,\n        minWidth : 160,\n        maxWidth : 160,\n        color : \"black\",\n        textAlign : \"right\",\n        margin : \"auto\",\n        paddingRight : 20,\n        whiteSpace : \"nowrap\",\n        overflow : \"hidden\",\n        textOverflow : \"ellipsis\"\n\n    }\n});\n\nvar noticeOpenState = false;\n// eslint-disable-next-line\nvar NoticeOpenStateModifier = undefined;\n\nvar noticeMsg = \"\";\nvar noticeMsgModifier = undefined;\n\n// eslint-disable-next-line\nvar noticeType = \"success\";\n// eslint-disable-next-line\nvar noticeTypeModifier = null;\n\nconst setOpen = () =>{\n    NoticeOpenStateModifier(true);\n}\n\nconst setClose = () =>{\n    NoticeOpenStateModifier(false);\n}\n\n\nfunction DoLoginAction()\n{\n    var success = true;\n    if (success)\n    {\n        noticeMsgModifier(\"登录成功\");\n        noticeTypeModifier(\"notice-success\")\n    }\n    else\n    {\n        noticeMsgModifier(\"登录失败\")\n        noticeTypeModifier(\"notice-error\")\n    }\n    setOpen();\n    console.log(noticeOpenState);\n}\n\nfunction LoginRegion(hookEvent, className, style)\n{\n    /* for popup login form */\n    function ShowDialog()\n    {\n        hookEvent[1](true);\n    }\n\n    function HideDialog()\n    {\n        hookEvent[1](false);\n    }\n\n    /* return login form */\n    return (\n    <>\n        <Button className={style.button} onClick={ShowDialog}>\n            登录\n            <AccountBoxIcon className={style.icon} />\n        </Button>\n        <Button className={style.button} href=\"/join\">\n            注册\n            <AssignmentIcon className={style.icon} />\n        </Button>\n        <Dialog open={hookEvent[0]} onClose={HideDialog}>\n            <DialogTitle>登录</DialogTitle>\n            <DialogContent >\n\n                <div>\n                    <TextField\n                        id=\"login-username\"\n                        label=\"用户名或邮箱\"\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        style={{margin: \"0 auto 0 auto\", minWidth: \"300px\"}}\n                    />\n                </div>\n                <div>\n                    <TextField\n                        id=\"login-password\"\n                        label=\"密码\"\n                        type=\"password\"\n                        name=\"password\"\n                        autoComplete=\"password\"\n                        margin=\"normal\"\n                        style={{marginTop: \"15px\", minWidth: \"300px\"}}\n                    />\n                </div>\n            </DialogContent>\n            <DialogAction>\n                <Button onClick={DoLoginAction}>登录</Button>\n                <Button onClick={HideDialog}>关闭</Button>\n            </DialogAction>\n            <Snackbar  open={noticeOpenState} onClose={setClose} message={noticeMsg} autoHideDuration={3000} />\n        </Dialog>\n        \n    </>\n    );\n}\n\nfunction RenderStatusZone(hookEvent, className, style, vaild, name, avatar){    \n\n    if(vaild){\n        ReactDOM.render(\n            <>\n                <div className={style.userZone}>\n                    <div className={style.userId}>\n                        <Link href=\"/user/?id=user\" underline=\"none\" >{name}</Link>\n                    </div>\n                    <Avatar src={avatar}/>\n                </div>\n            </>\n        , document.getElementsByClassName(className)[0]);\n    }\n    else{\n        ReactDOM.render(LoginRegion(hookEvent, className, style),document.getElementsByClassName(className)[0]);\n    }\n}; \n\nfunction StatusZone (className){\n    const [fuck, shit] = React.useState(false);\n    var _useState = React.useState(false);\n    noticeOpenState = _useState[0];\n    NoticeOpenStateModifier = _useState[1];\n\n    _useState = React.useState(\"notice\");\n    noticeMsg = _useState[0];\n    noticeMsgModifier = _useState[1];\n\n    _useState = React.useState(\"success\");\n    noticeType = _useState[0];\n    noticeTypeModifier = _useState[1];\n\n    const style = statusStyle();\n    var request = new XMLHttpRequest();\n    request.onreadystatechange = function(){\n        if (request.readyState === 4 && request.status === 200)\n        {\n            try{\n                var data = JSON.parse(request.responseText);\n                RenderStatusZone([fuck, shit], className, style, data.vaild, data.name, data.avatar);\n            }\n            catch{\n                RenderStatusZone([fuck, shit], className, style, false);\n            }\n            \n            \n        }\n        else if (request.readyState === 4){\n            RenderStatusZone([fuck, shit], className, style, false);\n        }\n    }\n    //    return [false, \"LegendLXH\", \"lxhcat.jpg\"];\n    request.open(\"GET\", \"/api/v1/GetUserInfo\", true)\n    request.send(null);\n\n    return \"\";\n};\n\n\nconst IndexZone = () => {\n    const style = indexStyle();\n    const [value, setValue] = React.useState(\"main\");\n\n    function handleChange(event, newValue) {\n        setValue(newValue);\n        ReactDOM.render(MainContainer(\"container-loading\"), document.getElementById('main-panel-root'));\n        ReactDOM.render(MainContainer(newValue), document.getElementById('main-panel-root'));\n    };\n\n    return(\n        <Tabs value = {value} onChange={handleChange} classes={{indicator:style.indicatorColor}} >\n            <Tab className=\"indexstyle-tabmod\" label=\"首页\"  value=\"main\"/>\n            <Tab className=\"indexstyle-tabmod\" label=\"时间线\"  value=\"timeline\" />\n            <Tab className=\"indexstyle-tabmod\" label=\"深水池\"  value=\"water\"/>\n            \n        </Tabs>\n    );\n};\n\nconst NavBar = () => {\n\n    return(\n        <AppBar position=\"fixed\" style={{minWidth: 960, background: \"#f5f5f5\"}}>\n            <ToolBar >\n                <Typography className =\"navstyle-title\" variant=\"h5\">\n                    LXH's Blog Space\n                </Typography>\n                <div className=\"navstyle-index\">\n                    <IndexZone />\n                </div>\n                <div className=\"navstyle-status\">\n                    {StatusZone(\"navstyle-status\")}\n                </div>\n            </ToolBar>\n        </AppBar>\n    )\n};\n\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar'\n\nfunction App() {\n  return (\n    <div className=\"navbar\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MainContainer from \"./components/MainContainer\"\nimport * as serviceWorker from './serviceWorker';\n\n//import Snackbar from \"@material-ui/core/Snackbar\";\n\nReactDOM.render(<App />, document.getElementById('nav-root'));\nReactDOM.render(MainContainer(\"main\"), document.getElementById('main-panel-root'));\n//ReactDOM.render(<Snackbar open={true} message={\"notice\"} />, document.getElementById('notice-snackbar'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}